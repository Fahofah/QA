{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 TrebuchetMS;}
{\colortbl;\red255\green255\blue255;\red26\green27\blue29;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13333\c14118\c14902;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16940\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\sl380\partightenfactor0

\f1\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
Abstraction
\b0  is a powerful methodology to manage complex systems. Abstraction is managed by well-defined objects and their hierarchical classification. For example a car in itself is a well-defined object, which is composed of several other smaller objects like a gearing system, steering mechanism, engine, which are again have their own subsystems. \
\
For example, in Java it occurs in using libraries.\
eg. java.util.Scanner\
\
Where the contents and methods of the functionality is hidden from the programmer.\
\
\

\b Encapsulation
\b0  is a method for separating outside of the class from the inside by specifying certain methods and/or variables as private. This creates an encapsulation and prevents possible cross-mismatching or misusage of variables.\
eg. public	 class Wait\{\
		private int duration;\
	\'85\
	\}\
\pard\tx566\pardeftab720\sl380\partightenfactor0
\cf2 \cb1 \
\pard\tx566\pardeftab720\sl380\partightenfactor0

\b \cf2 \cb3 \kerning1\expnd0\expndtw0 Inheritance 
\b0 \expnd0\expndtw0\kerning0
 is the mechanism by which an object acquires the some/all properties of another object. \cb1 I\cb3 \kerning1\expnd0\expndtw0 t uses the \cf2 \cb3 extend keyword trough polymorphism to add up to the methods of the inherited class.\cf2 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 e.g. class Wait\{\
	int duration\
	\}\
\
class Stop extends Wait\{\
	int motoradrs;\
\
	\'85\
	\}\
\
public static void main()\{\
\
	Stop obj =new Stop();\
	System.out.println(\'93Stop motor number \'94+ obj.motoradrs +\'94 for \'93 + obj.duration + \'93 seconds!\'94 );\
	\
\
\

\b \expnd0\expndtw0\kerning0
Polymorphism
\b0  is a unique adaptation of the original method of a parent class, while being used within a particular sub class. \
eg. Class Parent\{\
		\
	void Who()\{\
		System.out.println(\'93I am the Parent\'94);\
		\}\
	\}\
\
	Class Child extends Parent\{\
	\
	void Who()\{\
		\cf2 \cb3 System.out.println(\'93I am the Child\'94);\
		\}\cf2 \cb3 \
	\}\
\
	public static void main()\{\
\
		Parent a = new Parent();\
		Parent b = new Child();\
\
		a.Who();		//will tell Parent\
		b.Who();		//will tell Child\
	\}\
	\
\cb1 \
\pard\tx566\pardeftab720\sl380\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \cb3 \
}